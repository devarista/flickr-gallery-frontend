import type { NextPage, GetServerSideProps } from 'next'
import Head from 'next/head'
import axios from 'axios'
import { ImageData, Item } from '../types/interface'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import useDebounce from '../hooks/useDebounce'

const Home = (props: { images: ImageData }) => {
    const [imageData, setImageData] = useState(props.images)
    const [tags, setTags] = useState<string | null>(null)

    const debouncedSearch = useDebounce(tags, 500)

    useEffect(() => {
        const getImagesWithTags = async () => {
            const { data } = await axios.get(`${process.env.NEXT_PUBLIC_SERVER_URL}/image?tags=${debouncedSearch}`)
            return setImageData(data)
        }

        getImagesWithTags()
    }, [debouncedSearch])

    return (
        <div className='bg-slate-200 min-h-screen max-h-screen overflow-hidden'>
            <Head>
                <title>isFlickr Gallery?</title>
                <meta name='description' content='Generated by create next app' />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <div className='container mx-auto w-full h-full px-56 py-6 flex flex-col space-y-4'>
                <div className='text-6xl font-bold text-indigo-800'>
                    <span className='text-4xl font-normal'>is</span>
                    <span>Flickr</span> <span className='font-normal italic'>Gallery?</span>
                </div>
                <div className='container mx-auto w-full flex items-center'>
                    <input
                        id='search'
                        name='search'
                        type='search'
                        className='w-full rounded-lg bg-slate-200 text-indigo-600 placeholder-indigo-400'
                        placeholder='Search by Tag'
                        onChange={(e) => {
                            setTags(e.target.value)
                        }}
                    />
                </div>
                <div className='font-semibold text-lg text-slate-700'>{imageData.results.title}</div>
                {imageData.next.itemsLength === 0 && (
                    <div className='w-full h-full flex items-center justify-center'>
                        <p className='text-4xl font-bold text-red-600'>Image not Found</p>
                    </div>
                )}
                {imageData.next.itemsLength > 0 && (
                    <main className='w-full grid grid-cols-3 gap-4'>
                        {imageData.results.items.map((item: Item, index: number) => (
                            <a href={item.link} target='_blank' rel='noreferrer' key={index} className='relative group rounded-lg'>
                                <Image
                                    className='rounded-lg drop-shadow duration-500 transition ease-in-out'
                                    src={item.media.m}
                                    alt={item.title}
                                    layout='responsive'
                                    width={1}
                                    height={1}
                                    objectFit='cover'
                                />
                                <div className='hidden group-hover:flex justify-end flex-col duration-500 transition ease-in-out rounded-lg w-full absolute bottom-0 p-4 font-bold text-slate-100 text-lg bg-gradient-to-t from-slate-700 to-transparent'>
                                    <div>{item.title}</div>
                                    <span>by {item.author.split(' ')[1].replaceAll(/[^a-zA-Z0-9]*/g, '')}</span>
                                </div>
                            </a>
                        ))}
                    </main>
                )}
            </div>
        </div>
    )
}

export default Home

export const getServerSideProps: GetServerSideProps = async () => {
    const { data } = await axios.get<ImageData>(`${process.env.NEXT_PUBLIC_SERVER_URL}/image`)
    return {
        props: {
            images: data,
        },
    }
}
